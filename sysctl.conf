#
#      Kernel sysctl configuration file for linux kernel 2.6.18+
#             OPTIMIZED FOR LARGE LOADING
#                       version 2.2
#                   last updated: 07.12.10                   
#
# More information about the configuration options is available on:
#
#   *  http://www.opennet.ru/base/sys/sysctl_linux.txt.html
#   *  http://centos.alt.ru/?p=188
#   *  http://debian.telenet.ru/doc/sysctl.conf
#
#######################################################################
###                           ВНИМАНИЕ!!!
### После изменения параметров не забываем выполнить команду: sysctl -p
###
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Controls IP packet forwarding
net.ipv4.ip_forward = 0
# Controls source route verification
net.ipv4.conf.default.rp_filter = 0
# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0
# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0
# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1
# Controls the use of TCP syncookies
#net.ipv4.tcp_syncookies = 1
# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536
# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536
# Controls the maximum shared segment size, in bytes
kernel.shmmax = 4294967295
# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 268435456

###################
#Custom parameters#
###################
# New param
# Длина очереди для входящих пакетов
net.core.netdev_max_backlog = 10000
# Количество возможных подключений к сокету, прежде чем будут отброшены
net.core.somaxconn = 262144
#Запрещаем кеширование статуса ssthresh (были ретрансмиты) для других соединений
net.ipv4.tcp_no_metrics_save = 1
# Буфер под хранение SYN запросов на соединение. Значение по умолчанию 1024, что очень мало для нагруженных серверов.
net.ipv4.tcp_max_syn_backlog = 262144
# Возможное количество сокетов в состоянии TIME_WAIT
net.ipv4.tcp_max_tw_buckets = 720000
# Опция включена, иначе не будет работать опция tcp_tw_reuse описанная ниже
net.ipv4.tcp_timestamps = 1
# Механизм, разрешающий использовать уже существующие сокеты которые находятся в состоянии TIME_WAIT, если это не повредит безопасности.
net.ipv4.tcp_tw_reuse = 1
# Временной интервал попытки определения жизнеспособности соединения. 
# По умолчанию 7200, т е через 2 часа после того как через соединение прочел последний пакет,
# система отправит keep-alive запрос чтобы узнать состояние соединения. Уменьшим этот параметр до 30 минут.
net.ipv4.tcp_keepalive_time = 1800
# Количество посылок keepalive запросов и интервалов между запросами. 
# По умолчанию делается 9 попыток с интервалом в 75 секунд, что в свою очередь займет 9*75=11 минут и 25 секунд, 
# что в сочетании с параметром по умолчанию net.ipv4.tcp_keepalive_time = 7200 дает нам 
# значение 2часа 11 минут 25 секунд — минимальное значение времени после которого соединение будет закрыто нашей стороной
# после прохождения через это соединение последнего пакета. Это очень большой интервал.
net.ipv4.tcp_keepalive_probes = 7
net.ipv4.tcp_keepalive_intvl = 30
# Максимальный размер буферов по умолчанию для приема и отправки данных через сокеты (в байтах)
#net.core.wmem_max = 33554432
#net.core.rmem_max = 33554432
# Размер буферов по умолчанию для приема и отправки данных через сокеты (в байтах)
#net.core.rmem_default = 8388608
#net.core.wmem_default = 4194394
# Настройка буферов для TCP и UDP соединений (min, default, max bytes) (в байтах)
#net.ipv4.tcp_rmem = 4096 8388608 16777216
#net.ipv4.tcp_wmem = 4096 4194394 16777216
# Этот параметр дает ядру больше памяти для TCP.
# Это будет необходимо при 50k+ открытых соединений.
#net.ipv4.tcp_mem = 109568 109568 109568
# Количество попыток закрыть соединение перед тем как оно будет разорвано
# принудительно. Если вы администрируете http-сервер, который испытывает
# большие нагрузки, то стоит подумать об уменьшении этого значения.
# Переменная принимает целое число. Значение по-умолчанию  7, что
# соответствует, примерно, от 50 секунд до 16 минут

# Максимальное значение открытых файлов. Что бы его узнать, выполните
# команду cat /proc/sys/fs/file-max
fs.file-max = 100000
# Virtual memory

# VIRTUAL MEMORY MANAGEMENT
# Как часто ядро должно проверять есть ли «грязные» (измененные) данные для записи на диск (в сантисекундах).
#vm.dirty_writeback_centisecs=1500
# Минимальное число памяти (в процентах), где позволено хранить гразные данные вместо записи на диск.
# Этот параметр должен быть намного меньше чем dirty_ratio что бы позволить записывать куски грязных данных за один проход.
#vm.dirty_background_ratio=20
# Максимальный размер памяти (в процентах), для хранения грязных данных прежде чем процесс, их сгенерировавший, будет принужден записать их.
#vm.dirty_ratio=40
# Через сколько секунд после чтения данных должна начаться запись измененных файлов
# (это основано на предположении о том, что чтение вызовет раскрутку ранее остановленного диска).
#vm.laptop_mode=5
# Использовать swap только в крайнем случае
vm.swappiness=100
# Влияет на отношение ядра к освободившимся от кэшированных оъектов файловой системы страницам ОЗУ. Значение по умолчанию - 100. 
# Уменьшение этого значения заставляет ядро придерживать эти страницы почаще для своих нужд в будущем. 
# Увеличение значения заставляет ядро чаще отдавать эта страницы для нужд других программ
#vm.vfs_cache_pressure=1000
# Режим ноутбука
vm.laptop_mode=5
# Более редкий сброс «грязных» страниц кэша
vm.dirty_writeback_centisecs=6000



